#
ignoreColumns: [actionId, userId]
ignoreTables: [audit_auditevent, counter, cyrusUser, cyrusVirtual, syncDLFileVersionDiff, syncDLObject, syncDevice, systemEvent]
#
listener : {
  ignoredClasses: ["DataGuardTestRule", "DeleteAfterTestRunMethodTestRule", "UpgradeProcess"],
  ignoredMethods: ["Test.setUp", "TestCase.setUp", "TestUtil.setUp", "Fixture.setUp", "Test.tearDown", "TestCase.tearDown", "TestUtil.tearDown", "Fixture.tearDown", "MissingRequirementsConflictTest.testMissingParentFolder"],
  printThreadDump: true
}
#
references: [
    #generic references
  {origin: {table: ".*", columns: [".*${destTable.PrimaryKey}"]},                                     dest: {table: ".*", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: ".*", columns: ["${destTable.primaryKey}"]},                                       dest: {table: ".*", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: ".*", columns: ["groupId", "companyId"], condition: "groupId<>0 and companyId<>0"},dest: {table: "Group_", columns: ["groupId", "companyId"]}},
  {origin: {table: ".*", columns: ["ddmStorageId"]},                                                  dest: {table: "DDMContent", columns: ["contentId"]}},
  {origin: {table: ".*", columns: ["layoutId"]},                                                      dest: {table: "Layout", columns: ["layoutId"]}},
  {origin: {table: ".*", columns: ["layoutUuid"]},                                                    dest: {table: "Layout", columns: ["uuid_"]}, fixAction: "update" },
  {origin: {table: ".*", columns: [".*layoutPrototypeUuid"]},                                         dest: {table: "LayoutPrototype", columns: ["uuid_"]}, fixAction: "update" },
  {origin: {table: ".*", columns: [".*layoutSetPrototypeUuid"]},                                      dest: {table: "LayoutSetPrototype", columns: ["uuid_"]}, fixAction: "update" },
    #groupId
  {origin: {table: "Group_", columns: [".*${destTable.PrimaryKey}"]},                                 dest: {table: "Group_", columns: ["${destTable.primaryKey}"]}, fixAction: "update" },
    #folderId
  {origin: {table: ".*", columns: [".*folderId"], conditionColumns: ["groupId"]}}, #ignore
  {origin: {table: "KBArticle", columns: ["groupId", "kbFolderId"], condition: "kbFolderId<>0 and status<> 8", conditionColumns: ["status"]}, dest: {table: "KBFolder", columns: ["groupId","kbFolderId"]}, fixAction: "update_no_groupId" },
  {origin: {table: "KBFolder", columns: ["groupId", "parentKbFolderId"], condition: "parentKbFolderId<>0"}, dest: {table: "KBFolder", columns: ["groupId","kbFolderId"]}, fixAction: "update_no_groupId" },
  {origin: {table: "^(?!.*Folder\\b|DLFileEntry).*$", columns: ["groupId", "folderId"], condition: "folderId<>0"}, dest: {table: ".*Folder", columns: ["groupId","folderId"]}, fixAction: "update_no_groupId" },
  {origin: {table: "DLFileEntry", columns: ["fileEntryId", "groupId", "folderId"], condition: "folderId<>0"},      dest: {table: "DLFileVersion", columns: ["fileEntryId", "groupId","folderId"]}},
  {origin: {table: "^(?!.*Folder\\b).*$", columns: ["groupId", "folderId"], condition: "folderId<>0", conditionColumns: ["status"]}}, #ignore
  {origin: {table: "^(?!.*Folder\\b).*$", columns: ["groupId", "folderId"], condition: "folderId<>0 and status<> 8", conditionColumns: ["status"]}, dest: {table: ".*Folder", columns: ["groupId","folderId"]}, fixAction: "update_no_groupId" },
  {origin: {table: ".*", columns: ["groupId", "parentFolderId"], condition: "parentFolderId<>0"},                 dest: {table: ".*Folder", columns: ["groupId","folderId"]}, fixAction: "update_no_groupId" },
  {origin: {table: ".*", columns: ["groupId", "parentFolderId"], condition: "parentFolderId<>0", conditionColumns: ["status"]}}, #ignore
  {origin: {table: ".*", columns: ["groupId", "parentFolderId"], condition: "parentFolderId<>0 and status<> 8", conditionColumns: ["status"]}, dest: {table: ".*Folder", columns: ["groupId","folderId"]}, fixAction: "update_no_groupId" },
  {origin: {table: "^(?!.*Folder\\b|DLFileEntry).*$", columns: ["folderId", "treePath"], condition: "folderId<>0"},                dest: {table: ".*Folder", columns: ["folderId", "treePath"]}},
  {origin: {table: "DLFileEntry", columns: ["fileEntryId", "folderId", "treePath"], condition: "folderId<>0"},                     dest: {table: "DLFileVersion", columns: ["fileEntryId", "folderId", "treePath"]}},
  {origin: {table: "^(?!.*Folder\\b).*$", columns: ["folderId", "treePath"], condition: "folderId<>0", conditionColumns: ["status"]}}, #ignore
  {origin: {table: "^(?!.*Folder\\b).*$", columns: ["folderId", "treePath"], condition: "folderId<>0 and status<> 8", conditionColumns: ["status"]}, dest: {table: ".*Folder", columns: ["folderId", "treePath"]}},
    #imageId
  {origin: {table: ".*", columns: ["logoId"]},                                                        dest: {table: "Image", columns: ["imageId"]}},
  {origin: {table: ".*", columns: ["portraitId"]},                                                    dest: {table: "Image", columns: ["imageId"]}},
  {origin: {table: ".*", columns: ["smallImageId"], condition: "smallImage=[$TRUE$] and smallImageURL IS NULL", conditionColumns: ["smallImage","smallImageURL"]}, dest: {table: "Image", columns: ["imageId"]}},
  {origin: {table: ".*", columns: ["smallImageId"]}}, #ignore
  {origin: {table: "DLFileEntry", columns: [".*imageId"]}}, #ignore
    #userId
  {origin: {table: "^(?!Contact_\\b).*$", columns: ["^(userId|completionUserId|creatorUserId|lastPostByUserId|lockUserId|receiverUserId|replierUserId|rootMessageUserId|statusByUserId|versionUserId)$"]}, dest: {table: "User_", columns: ["userId"]}, fixAction: "update" },
  {origin: {table: ".*", columns: ["userId.+"]}, dest: {table: "User_", columns: ["userId"]}, fixAction: "update" },
  {origin: {table: "PollsVote", columns: ["userId"]}}, #ignore
    #portletId
  {origin: {table: "^(?!Repository\\b).*$", columns: ["portletId"], condition: "portletId not like '%_INSTANCE_%' and portletId not like '%_USER_%'"},                                                                        dest: {table: "Portlet", columns: ["portletId"]}},
  {origin: {table: "^(?!Repository\\b).*$", columns: ["portletId"], condition: "portletId not like '%_INSTANCE_%' and portletId like '%_USER_%'", castings: ["SUBSTR(portletId, 1, INSTR(portletId, '_USER_')-1 )"]},         dest: {table: "Portlet", columns: ["portletId"]}},
  {origin: {table: "^(?!Repository\\b).*$", columns: ["portletId"], condition: "portletId like '%_INSTANCE_%' and portletId not like '%_USER_%'", castings: ["SUBSTR(portletId, 1, INSTR(portletId, '_INSTANCE_')-1 )"]},     dest: {table: "Portlet", columns: ["portletId"]}},
  {origin: {table: "^(?!Repository\\b).*$", columns: ["portletId"], condition: "portletId like '%_INSTANCE_%' and portletId like '%_USER_%'", castings: ["SUBSTR(portletId, 1, INSTR(portletId, '_USER_')-1 )"]},             dest: {table: "Portlet", columns: ["portletId"]}},
  {origin: {table: "^(?!Repository\\b).*$", columns: ["portletId"], condition: "portletId like '%_INSTANCE_%' and portletId like '%_USER_%'", castings: ["SUBSTR(portletId, INSTR(portletId, '_USER_')+6, INSTR(portletId, '_INSTANCE_')-(INSTR(portletId, '_USER_')+6) )"]},    dest: {table: "User_", columns: ["userId"]}},
    #ignore generic references
  {origin: {table: ".*", columns: ["${origTable.primaryKey}"]}}, #primary keys must not be checked with any other pk
  {origin: {table: ".*", columns: ["groupId", "${origTable.primaryKey}"], condition: "folderId<>0", conditionColumns: ["folderId"]}}, #primary keys must not be checked with any other pk
  {origin: {table: ".*", columns: ["${origTable.primaryKey}", "treePath"], condition: "folderId<>0", conditionColumns: ["folderId"]}}, #primary keys must not be checked with any other pk
  {origin: {table: ".*", columns: ["uuid_"]}}, #ignore
  {origin: {table: ".*", columns: [".*statusId"]}}, #ignore
    #force other references
  {origin: {table: "AssetCategory",  columns: ["leftCategoryid"]}}, #ignore
  {origin: {table: "AssetCategory",  columns: ["rightCategoryid"]}}, #ignore
  {origin: {table: "AssetLink",      columns: ["entryId.*"]},                                         dest: {table: "AssetEntry",  columns: ["entryId"]}},
  {origin: {table: "DL.*",           columns: ["repositoryId"]}}, #ignore
  {origin: {table: "^(?!DLContent\\b)DL.*$", columns: ["repositoryId"], condition: "repositoryId<>groupId", conditionColumns: ["groupId"]}, dest: {table: "Repository",      columns: ["repositoryId"]}},
  {origin: {table: "^(?!DLContent\\b)DL.*$", columns: ["repositoryId"], condition: "repositoryId=groupId", conditionColumns: ["groupId"]},  dest: {table: "Group_",          columns: ["groupId"]}},
  {origin: {table: "DLFileEntry",    columns: ["fileEntryId","version"]},                            dest: {table: "DLFileVersion",   columns: ["fileEntryId","version"]}},
  {origin: {table: "KBArticle",      columns: [".*resourcePrimKey"]}}, #ignore
  {origin: {table: "KBArticle",      columns: ["rootResourcePrimKey"]}, dest: {table: "KBArticle", columns: ["resourcePrimKey"]}},
  {origin: {table: "KBArticle",      columns: ["parentResourcePrimKey"], condition: "parentResourceClassNameId in (select classNameId from ClassName_ where value='${destTable.className}')", conditionColumns: ["parentResourceClassNameId"]}, dest: {table: "KBArticle", columns: ["resourcePrimKey"]}, fixAction: "update" },
  {origin: {table: "KBArticle",      columns: ["parentResourcePrimKey", "KBFolderId"], condition: "parentResourcePrimKey <> 0 and parentResourceClassNameId in (select classNameId from ClassName_ where value='${destTable.className}')", conditionColumns: ["parentResourceClassNameId"]}, dest: {table: "KBFolder", columns: ["KBFolderId", "KBFolderId"]}, fixAction: "update" },
  {origin: {table: "Layout",         columns: ["parentLayoutId"], condition: "parentLayoutId<>0"},   dest: {table: "Layout",          columns: ["layoutId"]}},
  {origin: {table: "Marketplace_App",columns: ["remoteAppId"]}}, #ignore
  {origin: {table: "MB.*",           columns: [".*categoryId"]}}, #ignore
  {origin: {table: "^(?!MBCategory\\b).*$", columns: ["categoryId"], condition: "categoryId<>-1 and categoryId<>0 and status<> 8", conditionColumns: ["status"]}, dest: {table: "MBCategory", columns: ["categoryId"]}, fixAction: "update" },
  {origin: {table: "MB.*",           columns: [".+categoryId"], condition: "categoryId<>-1 and categoryId<>0 and status<> 8", conditionColumns: ["status"]}, dest: {table: "MBCategory", columns: ["categoryId"]}, fixAction: "update" },
  {origin: {table: "MB.*",           columns: ["categoryId"], condition: "categoryId<>-1 and categoryId<>0 and status<> 8", conditionColumns: ["status"]}, dest: {table: "MBCategory", columns: ["categoryId"]}, fixAction: "update" },
  {origin: {table: "JournalArticle", columns: ["groupId","resourcePrimKey","articleId"]}, dest: {table: "JournalArticleResource", columns: ["groupId","resourcePrimKey","articleId"]}, fixAction: "create" },
  {origin: {table: "JournalArticleResource", columns: ["groupId","resourcePrimKey","articleId"]}, dest: {table: "JournalArticle",  columns: ["groupId","resourcePrimKey","articleId"]}, fixAction: "delete" },
  {origin: {table: "Journal.*",      columns: ["articleId"]},                                        dest: {table: "JournalArticleResource",  columns: ["articleId"]}},
  {origin: {table: "Journal.*",      columns: ["parentStructureId"]},                                dest: {table: "JournalStructure", columns: ["structureId"]}},
  {origin: {table: "Journal.*",      columns: ["structureId"]},                                      dest: {table: "DDMStructure",    columns: ["structureKey"], condition: "classNameId in (select classNameId from ClassName_ where value='${JournalArticle.className}')"}},
  {origin: {table: "Journal.*",      columns: ["templateId"]},                                       dest: {table: "DDMTemplate",     columns: ["templateKey"]}},
  {origin: {table: "Repository",     columns: ["dlFolderId"]},                                       dest: {table: "DLFolder",        columns: ["folderId"]}},
  {origin: {table: "SocialActivity", columns: ["parentClassPk"], condition: "parentclassNameId in (select classNameId from ClassName_ where value='${destTable.className}')"}, dest: {table: ".*",  columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "WikiPage",       columns: ["groupId","resourcePrimKey"]},                        dest: {table: "WikiPageResource", columns: ["groupId","resourcePrimKey"]}},
    #relations with ListType columns
  {origin: {table: "Address",  columns: ["typeId"]},         dest: {table: "ListType", columns: ["listTypeId"], condition: "type_ like '%.address'"}},
  {origin: {table: "EmailAddress",  columns: ["typeId"]},    dest: {table: "ListType", columns: ["listTypeId"], condition: "type_ like '%.emailAddress'"}},
  {origin: {table: "Phone",  columns: ["typeId"]},           dest: {table: "ListType", columns: ["listTypeId"], condition: "type_ like '%.phone'"}},
  {origin: {table: "Website",  columns: ["typeId"]},         dest: {table: "ListType", columns: ["listTypeId"], condition: "type_ like '%.website'"}},
  {origin: {table: "Contact_",  columns: ["prefixId"]},      dest: {table: "ListType", columns: ["listTypeId"], condition: "type_='com.liferay.portal.model.Contact.prefix'"}},
  {origin: {table: "Contact_",  columns: ["suffixId"]},      dest: {table: "ListType", columns: ["listTypeId"], condition: "type_='com.liferay.portal.model.Contact.suffix'"}},
  {origin: {table: "OrgLabor", columns: ["typeId"]},         dest: {table: "ListType", columns: ["listTypeId"], condition: "type_='com.liferay.portal.model.Organization.service'"}},
  {origin: {table: "Organization_",  columns: ["statusId"]}, dest: {table: "ListType", columns: ["listTypeId"], condition: "type_='com.liferay.portal.model.Organization.status'"}},
    #relations to AssetEntry table
  {origin: {table: "^(BlogsEntry|BookmarksEntry|BookmarksFolder|CalendarBooking|JournalFolder)$", columns: ["${origTable.primaryKey}"]}, dest: {table: "AssetEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${origTable.className}')"}, fixAction: "create" },
  {origin: {table: "DLFileEntry", columns: ["${origTable.primaryKey}"], condition: "groupId = repositoryId"}, dest: {table: "AssetEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${origTable.className}')"}, fixAction: "create" },
  {origin: {table: "MBMessage", columns: ["${origTable.primaryKey}"], condition: "categoryId != -1"}, dest: {table: "AssetEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${origTable.className}')"}, fixAction: "create" },
  {origin: {table: "MBMessage", columns: ["${origTable.primaryKey}"], condition: "categoryId = -1"}, dest: {table: "AssetEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${MBDiscussion.className}')"}, fixAction: "create" },
  {origin: {table: "MBThread", columns: ["${origTable.primaryKey}"], condition: "categoryId >= 0"}, dest: {table: "AssetEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${origTable.className}')"}, fixAction: "create" },
  {origin: {table: "User_",  columns: ["${origTable.primaryKey}"], condition: "defaultUser=[$FALSE$] and status in (0, 2)"}, dest: {table: "AssetEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${origTable.className}')"}, fixAction: "create" },
  {origin: {table: "^(JournalArticle|KBArticle|WikiPage)$",  columns: ["resourcePrimKey"], condition: "status = 0", conditionColumns: ["status"]}, dest: {table: "AssetEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${origTable.className}')"}, fixAction: "create" },
    #relations using classname+classpk columns
  {origin: {table: "^(?!Group_\\b).*$", columns: ["classPk"], condition: "className='${destTable.className}' and classPk IS NOT NULL", conditionColumns: ["className", "classPk"]}, dest: {table: ".*", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "^(?!Group_\\b).*$", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${destTable.className}') and classPk IS NOT NULL", conditionColumns: ["classNameId", "classPk"]}, dest: {table: ".*", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "^(?!Group_\\b).*$", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${MBDiscussion.className}') and classPk IS NOT NULL", conditionColumns: ["classNameId", "classPk"]}, dest: {table: "MBMessage", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "^(?!Group_\\b).*$", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${destTable.className}') and classPk IS NOT NULL", conditionColumns: ["classNameId", "classPk"]}, dest: {table: ".*", columns: ["ignoreReference"], conditionColumns: ["resourcePrimKey"]}, displayRaw: false, hidden: true}, #ignore tables with resourcePrimKey
  {origin: {table: "^(?!Group_\\b).*$", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${destTable.className}') and classPk IS NOT NULL and classPk not in (select resourcePrimKey from ${destTable.tableName})", conditionColumns: ["classNameId", "classPk"]}, dest: {table: ".*", columns: ["${destTable.primaryKey}"], conditionColumns: ["resourcePrimKey"]}, displayRaw: true, hidden: true},
  {origin: {table: "^(?!Group_\\b).*$", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${destTable.className}') and classPk IS NOT NULL and classPk not in (select ${destTable.primaryKey} from ${destTable.tableName})", conditionColumns: ["classNameId", "classPk"]}, dest: {table: ".*", columns: ["resourcePrimKey"]}, displayRaw: false, hidden: true},
  {origin: {table: "AssetEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DLFileEntry.className}') and classPk IS NOT NULL", conditionColumns: ["classNameId", "classPk"]}}, #ignore
  {origin: {table: "AssetEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DLFileEntry.className}') and classPk IS NOT NULL and classPk not in (select fileVersionId from DLFileVersion where status <> 0 and version <> '1.0')", conditionColumns: ["classNameId", "classPk"]}, dest: {table: "DLFileEntry", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "ExpandoRow", columns: ["classPk"], condition: "tableId in (select tableId from ExpandoTable where classNameId in (select classNameId from ClassName_ where value='${destTable.className}')) and classPk<>0", conditionColumns: ["tableId", "classPk"]}, dest: {table: ".*", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "ExpandoRow", columns: ["classPk"], condition: "tableId in (select tableId from ExpandoTable where classNameId in (select classNameId from ClassName_ where value='${DLFileEntry.className}')) and classPk<>0", conditionColumns: ["tableId", "classPk"]}, dest: {table: "DLFileVersion", columns: ["${DLFileVersion.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "ExpandoValue", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DLFileEntry.className}') and classPk IS NOT NULL", conditionColumns: ["classNameId", "classPk"]}, dest: {table: "DLFileVersion", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "Group_", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${destTable.className}') and classPk IS NOT NULL", conditionColumns: ["classNameId", "classPk"]}, dest: {table: "^(Company\\b|Group_\\b|Layout\\b|LayoutPrototype\\b|LayoutSetPrototype\\b|Organization_\\b|User_\\b|UserGroup\\b).*$", columns: ["${destTable.primaryKey}"]}, fixAction: "delete" },
  {origin: {table: "Kaleo.*", columns: ["classPk"], condition: "className='${DDLRecord.className}' and classPk IS NOT NULL", conditionColumns: ["className", "classPk"]}, dest: {table: "DDLRecordVersion", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "Kaleo.*", columns: ["classPk"], condition: "className='${DLFileEntry.className}' and classPk IS NOT NULL", conditionColumns: ["className", "classPk"]}, dest: {table: "DLFileVersion", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "Kaleo.*", columns: ["assigneeClassPk"], condition: "assigneeClassName='${destTable.className}' and assigneeClassPk<>0", conditionColumns: ["assigneeClassName", "assigneeClassPk"]}, dest: {table: "^(Role_\\b|User_\\b).*$", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "Kaleo.*", columns: ["currentAssigneeClassPk"], condition: "currentAssigneeClassName='${destTable.className}' and currentAssigneeClassPk<>0", conditionColumns: ["currentAssigneeClassName", "currentAssigneeClassPk"]}, dest: {table: "^(Role_\\b|User_\\b).*$", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "Kaleo.*", columns: ["kaleoClassPk"], condition: "kaleoClassName='${destTable.className}' and kaleoClassPk<>0", conditionColumns: ["kaleoClassName", "kaleoClassPk"]}, dest: {table: "Kaleo.*", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "Kaleo.*", columns: ["previousAssigneeClassPk"], condition: "previousAssigneeClassName='${destTable.className}' and previousAssigneeClassPk<>0", conditionColumns: ["previousAssigneeClassName", "previousAssigneeClassPk"]}, dest: {table: "^(Role_\\b|User_\\b).*$", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "Kaleo.*", columns: ["recipientClassPk"], condition: "recipientClassName='${destTable.className}' and recipientClassPk<>0", conditionColumns: ["recipientClassName", "recipientClassPk"]}, dest: {table: "^(Role_\\b|User_\\b).*$", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "Workflow.*", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DDLRecord.className}') and classPk IS NOT NULL", conditionColumns: ["classNameId", "classPk"]}, dest: {table: "DDLRecordVersion", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "Workflow.*", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DLFileEntry.className}') and classPk IS NOT NULL", conditionColumns: ["classNameId", "classPk"]}, dest: {table: "DLFileVersion", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "PortletPreferences", columns: ["ownerId"], condition: "ownerType = 1 and ownerId <> 0"}, dest: {table: "Company", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "PortletPreferences", columns: ["ownerId"], condition: "ownerType = 2 and ownerId <> 0"}, dest: {table: "Group_", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "PortletPreferences", columns: ["ownerId"], condition: "ownerType = 4 and ownerId <> 0"}, dest: {table: "User", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "PortletPreferences", columns: ["ownerId"], condition: "ownerType = 5 and ownerId <> 0"}, dest: {table: "PortletItem", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "PortletPreferences", columns: ["ownerId"], condition: "ownerType = 6 and ownerId <> 0"}, dest: {table: "Organization_", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "PortletPreferences", columns: ["plid"]}}, #ignore
  {origin: {table: "PortletPreferences", columns: ["plid"], condition: "plid not in (select layoutRevisionId from LayoutRevision)"}, dest: {table: "Layout", columns: ["plid"]}},
  {origin: {table: "ResourcePermission", columns: ["primKey"], condition: "scope = 1"}, dest: {table: "Company", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "ResourcePermission", columns: ["primKey"], condition: "scope = 2"}, dest: {table: "Group_", columns: ["${destTable.primaryKey}"]}},
  {origin: {table: "ResourcePermission", columns: ["primKey"], condition: "scope = 4 and name='${destTable.className}'"}, dest: {table: ".*", columns: ["${destTable.primaryKey}"]}, displayRaw: true, hidden: true},
  {origin: {table: "ResourcePermission", columns: ["primKey"], condition: "scope = 4 and name='${destTable.className}'"}, dest: {table: ".*", columns: ["resourcePrimKey"]}, displayRaw: true, hidden: true}
  {origin: {table: "ResourcePermission", columns: ["primKey"], castings: ["SUBSTR(primKey, 1, INSTR(primKey, '_LAYOUT_')-1 )"], condition: "scope = 4 and primKey like '%_LAYOUT_%'"}, dest: {table: "Layout", columns: ["plid"]}},
   #trash entry
  {origin: {table: ".*",              columns: ["${origTable.primaryKey}"], condition: "status=8", conditionColumns: ["status"]},          dest: {table: "TrashEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${origTable.className}')"}},
  {origin: {table: ".*",              columns: ["${origTable.primaryKey}"], condition: "status=8", conditionColumns: ["status","resourcePrimKey"]}}, #ignore
  {origin: {table: ".*",              columns: ["resourcePrimKey"], condition: "status=8", conditionColumns: ["status"]},                  dest: {table: "TrashEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${origTable.className}')"}},
  {origin: {table: "DLFileVersion",  columns: ["${origTable.primaryKey}"], condition: "status=8", conditionColumns: ["status"]}}, #ignore
  {origin: {table: "DLFileVersion",  columns: ["fileEntryId"], condition: "status=8", conditionColumns: ["status"]},                      dest: {table: "TrashEntry", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DLFileEntry.className}')"}},
  {origin: {table: "TrashEntry",     columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${destTable.className}') and classPk IS NOT NULL"}, dest: {table: ".*", columns: ["${destTable.primaryKey}"], condition: "status=8", conditionColumns: ["status"]}, displayRaw: true, hidden: true},
  {origin: {table: "TrashEntry",     columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${destTable.className}') and classPk IS NOT NULL"}, dest: {table: ".*", columns: ["resourcePrimKey"], condition: "status=8", conditionColumns: ["status"]}, displayRaw: true, hidden: true},
  {origin: {table: "TrashEntry",     columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DLFileVersion.className}') and classPk IS NOT NULL"}}, #ignore
  {origin: {table: "TrashEntry",     columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DLFileEntry.className}') and classPk IS NOT NULL"}, dest: {table: "DLFileVersion", columns: ["fileEntryId"], condition: "status=8", conditionColumns: ["status"]}, displayRaw: true, hidden: true},
    #trash version
    #  {origin: {table: ".*",             columns: ["${origTable.primaryKey}"], condition: "status=8", conditionColumns: ["status"]},          dest: {table: "TrashVersion", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${origTable.className}')"}},
    #  {origin: {table: "DLFileVersion",  columns: ["${origTable.primaryKey}"], condition: "status=8", conditionColumns: ["status"]},          dest: {table: "TrashVersion", columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DLFileEntry.className}')"}},
  {origin: {table: "TrashVersion",   columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${destTable.className}') and classPk IS NOT NULL"}, dest: {table: ".*", columns: ["${destTable.primaryKey}"], condition: "status=8", conditionColumns: ["status"]}, displayRaw: true, hidden: true},
  {origin: {table: "TrashVersion",   columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DLFileVersion.className}') and classPk IS NOT NULL"}}, #ignore
  {origin: {table: "TrashVersion",   columns: ["classPk"], condition: "classNameId in (select classNameId from ClassName_ where value='${DLFileEntry.className}') and classPk IS NOT NULL"}, dest: {table: "DLFileVersion", columns: ["${destTable.primaryKey}"], condition: "status=8", conditionColumns: ["status"]}, displayRaw: true, hidden: true}
    ]
#
tableToClassNameMapping : {
    "Account_" : "com.liferay.portal.model.Account",
    "Address" : "com.liferay.portal.model.Address",
    "AnnouncementsDelivery" : "com.liferay.portlet.announcements.model.AnnouncementsDelivery",
    "AnnouncementsEntry" : "com.liferay.portlet.announcements.model.AnnouncementsEntry",
    "AnnouncementsFlag" : "com.liferay.portlet.announcements.model.AnnouncementsFlag",
    "AssetCategory" : "com.liferay.portlet.asset.model.AssetCategory",
    "AssetCategoryProperty" : "com.liferay.portlet.asset.model.AssetCategoryProperty",
    "AssetEntry" : "com.liferay.portlet.asset.model.AssetEntry",
    "AssetLink" : "com.liferay.portlet.asset.model.AssetLink",
    "AssetTag" : "com.liferay.portlet.asset.model.AssetTag",
    "AssetTagProperty" : "com.liferay.portlet.asset.model.AssetTagProperty",
    "AssetTagStats" : "com.liferay.portlet.asset.model.AssetTagStats",
    "AssetVocabulary" : "com.liferay.portlet.asset.model.AssetVocabulary",
    "BackgroundTask" : "com.liferay.portal.model.BackgroundTask",
    "BlogsEntry" : "com.liferay.portlet.blogs.model.BlogsEntry",
    "BlogsStatsUser" : "com.liferay.portlet.blogs.model.BlogsStatsUser",
    "BookmarksEntry" : "com.liferay.portlet.bookmarks.model.BookmarksEntry",
    "BookmarksFolder" : "com.liferay.portlet.bookmarks.model.BookmarksFolder",
    "BrowserTracker" : "com.liferay.portal.model.BrowserTracker",
    "CT_AU_AnonymousUser" : "com.liferay.content.targeting.anonymous.users.model.AnonymousUser",
    "CT_Analytics_AnalyticsEvent" : "com.liferay.content.targeting.analytics.model.AnalyticsEvent",
    "CT_Analytics_AnalyticsReferrer" : "com.liferay.content.targeting.analytics.model.AnalyticsReferrer",
    "CT_CCR_CampaignContent" : "com.liferay.content.targeting.report.campaign.content.model.CampaignContent",
    "CT_CTA_CTAction" : "com.liferay.content.targeting.report.campaign.tracking.action.model.CTAction",
    "CT_CTA_CTActionTotal" : "com.liferay.content.targeting.report.campaign.tracking.action.model.CTActionTotal",
    "CT_Campaign" : "com.liferay.content.targeting.model.Campaign",
    "CT_ReportInstance" : "com.liferay.content.targeting.model.ReportInstance",
    "CT_RuleInstance" : "com.liferay.content.targeting.model.RuleInstance",
    "CT_ScorePoints_ScorePoint" : "com.liferay.content.targeting.rule.score.points.model.ScorePoint",
    "CT_TrackingActionInstance" : "com.liferay.content.targeting.model.TrackingActionInstance",
    "CT_USCR_UserSegmentContent" : "com.liferay.content.targeting.report.user.segment.content.model.UserSegmentContent",
    "CT_UserSegment" : "com.liferay.content.targeting.model.UserSegment",
    "CalEvent" : "com.liferay.portlet.calendar.model.CalEvent",
    "Calendar" : "com.liferay.calendar.model.Calendar",
    "CalendarBooking" : "com.liferay.calendar.model.CalendarBooking",
    "CalendarNotificationTemplate" : "com.liferay.calendar.model.CalendarNotificationTemplate",
    "CalendarResource" : "com.liferay.calendar.model.CalendarResource",
    "Chat_Entry" : "com.liferay.chat.model.Entry",
    "Chat_Status" : "com.liferay.chat.model.Status",
    "ClassName_" : "com.liferay.portal.model.ClassName",
    "ClusterGroup" : "com.liferay.portal.model.ClusterGroup",
    "Company" : "com.liferay.portal.model.Company",
    "Contact_" : "com.liferay.portal.model.Contact",
    "Country" : "com.liferay.portal.model.Country",
    "DDLRecord" : "com.liferay.portlet.dynamicdatalists.model.DDLRecord",
    "DDLRecordSet" : "com.liferay.portlet.dynamicdatalists.model.DDLRecordSet",
    "DDLRecordVersion" : "com.liferay.portlet.dynamicdatalists.model.DDLRecordVersion",
    "DDMContent" : "com.liferay.portlet.dynamicdatamapping.model.DDMContent",
    "DDMStorageLink" : "com.liferay.portlet.dynamicdatamapping.model.DDMStorageLink",
    "DDMStructure" : "com.liferay.portlet.dynamicdatamapping.model.DDMStructure",
    "DDMStructureLink" : "com.liferay.portlet.dynamicdatamapping.model.DDMStructureLink",
    "DDMTemplate" : "com.liferay.portlet.dynamicdatamapping.model.DDMTemplate",
    "DLContent" : "com.liferay.portlet.documentlibrary.model.DLContent",
    "DLFileEntry" : "com.liferay.portlet.documentlibrary.model.DLFileEntry",
    "DLFileEntryMetadata" : "com.liferay.portlet.documentlibrary.model.DLFileEntryMetadata",
    "DLFileEntryType" : "com.liferay.portlet.documentlibrary.model.DLFileEntryType",
    "DLFileRank" : "com.liferay.portlet.documentlibrary.model.DLFileRank",
    "DLFileShortcut" : "com.liferay.portlet.documentlibrary.model.DLFileShortcut",
    "DLFileVersion" : "com.liferay.portlet.documentlibrary.model.DLFileVersion",
    "DLFolder" : "com.liferay.portlet.documentlibrary.model.DLFolder",
    "DLSyncEvent" : "com.liferay.portlet.documentlibrary.model.DLSyncEvent",
    "EmailAddress" : "com.liferay.portal.model.EmailAddress",
    "ExpandoColumn" : "com.liferay.portlet.expando.model.ExpandoColumn",
    "ExpandoRow" : "com.liferay.portlet.expando.model.ExpandoRow",
    "ExpandoTable" : "com.liferay.portlet.expando.model.ExpandoTable",
    "ExpandoValue" : "com.liferay.portlet.expando.model.ExpandoValue",
    "Group_" : "com.liferay.portal.model.Group",
    "Image" : "com.liferay.portal.model.Image",
    "JournalArticle" : "com.liferay.portlet.journal.model.JournalArticle",
    "JournalArticleImage" : "com.liferay.portlet.journal.model.JournalArticleImage",
    "JournalArticleResource" : "com.liferay.portlet.journal.model.JournalArticleResource",
    "JournalContentSearch" : "com.liferay.portlet.journal.model.JournalContentSearch",
    "JournalFeed" : "com.liferay.portlet.journal.model.JournalFeed",
    "JournalFolder" : "com.liferay.portlet.journal.model.JournalFolder",
    "KBArticle" : "com.liferay.knowledgebase.model.KBArticle",
    "KBComment" : "com.liferay.knowledgebase.model.KBComment",
    "KBFolder" : "com.liferay.knowledgebase.model.KBFolder",
    "KBTemplate" : "com.liferay.knowledgebase.model.KBTemplate",
    "KaleoAction" : "com.liferay.portal.workflow.kaleo.model.KaleoAction",
    "KaleoCondition" : "com.liferay.portal.workflow.kaleo.model.KaleoCondition",
    "KaleoDefinition" : "com.liferay.portal.workflow.kaleo.model.KaleoDefinition",
    "KaleoDraftDefinition" : "com.liferay.portal.workflow.kaleo.designer.model.KaleoDraftDefinition",
    "KaleoInstance" : "com.liferay.portal.workflow.kaleo.model.KaleoInstance",
    "KaleoInstanceToken" : "com.liferay.portal.workflow.kaleo.model.KaleoInstanceToken",
    "KaleoLog" : "com.liferay.portal.workflow.kaleo.model.KaleoLog",
    "KaleoNode" : "com.liferay.portal.workflow.kaleo.model.KaleoNode",
    "KaleoNotification" : "com.liferay.portal.workflow.kaleo.model.KaleoNotification",
    "KaleoNotificationRecipient" : "com.liferay.portal.workflow.kaleo.model.KaleoNotificationRecipient",
    "KaleoProcess" : "com.liferay.portal.workflow.kaleo.forms.model.KaleoProcess",
    "KaleoProcessLink" : "com.liferay.portal.workflow.kaleo.forms.model.KaleoProcessLink",
    "KaleoTask" : "com.liferay.portal.workflow.kaleo.model.KaleoTask",
    "KaleoTaskAssignment" : "com.liferay.portal.workflow.kaleo.model.KaleoTaskAssignment",
    "KaleoTaskAssignmentInstance" : "com.liferay.portal.workflow.kaleo.model.KaleoTaskAssignmentInstance",
    "KaleoTaskInstanceToken" : "com.liferay.portal.workflow.kaleo.model.KaleoTaskInstanceToken",
    "KaleoTimer" : "com.liferay.portal.workflow.kaleo.model.KaleoTimer",
    "KaleoTimerInstanceToken" : "com.liferay.portal.workflow.kaleo.model.KaleoTimerInstanceToken",
    "KaleoTransition" : "com.liferay.portal.workflow.kaleo.model.KaleoTransition",
    "Layout" : "com.liferay.portal.model.Layout",
    "LayoutBranch" : "com.liferay.portal.model.LayoutBranch",
    "LayoutFriendlyURL" : "com.liferay.portal.model.LayoutFriendlyURL",
    "LayoutPrototype" : "com.liferay.portal.model.LayoutPrototype",
    "LayoutRevision" : "com.liferay.portal.model.LayoutRevision",
    "LayoutSet" : "com.liferay.portal.model.LayoutSet",
    "LayoutSetBranch" : "com.liferay.portal.model.LayoutSetBranch",
    "LayoutSetPrototype" : "com.liferay.portal.model.LayoutSetPrototype",
    "ListType" : "com.liferay.portal.model.ListType",
    "Lock_" : "com.liferay.portal.model.Lock",
    "MBBan" : "com.liferay.portlet.messageboards.model.MBBan",
    "MBCategory" : "com.liferay.portlet.messageboards.model.MBCategory",
    "MBDiscussion" : "com.liferay.portlet.messageboards.model.MBDiscussion",
    "MBMailingList" : "com.liferay.portlet.messageboards.model.MBMailingList",
    "MBMessage" : "com.liferay.portlet.messageboards.model.MBMessage",
    "MBStatsUser" : "com.liferay.portlet.messageboards.model.MBStatsUser",
    "MBThread" : "com.liferay.portlet.messageboards.model.MBThread",
    "MBThreadFlag" : "com.liferay.portlet.messageboards.model.MBThreadFlag",
    "MDRAction" : "com.liferay.portlet.mobiledevicerules.model.MDRAction",
    "MDRRule" : "com.liferay.portlet.mobiledevicerules.model.MDRRule",
    "MDRRuleGroup" : "com.liferay.portlet.mobiledevicerules.model.MDRRuleGroup",
    "MDRRuleGroupInstance" : "com.liferay.portlet.mobiledevicerules.model.MDRRuleGroupInstance",
    "Marketplace_App" : "com.liferay.marketplace.model.App",
    "Marketplace_Module" : "com.liferay.marketplace.model.Module",
    "MembershipRequest" : "com.liferay.portal.model.MembershipRequest",
    "Notifications_UserNotificationEvent" : "com.liferay.notifications.model.UserNotificationEvent",
    "OAuth_OAuthApplication" : "com.liferay.oauth.model.OAuthApplication",
    "OAuth_OAuthUser" : "com.liferay.oauth.model.OAuthUser",
    "OpenSocial_Gadget" : "com.liferay.opensocial.model.Gadget",
    "OpenSocial_OAuthConsumer" : "com.liferay.opensocial.model.OAuthConsumer",
    "OpenSocial_OAuthToken" : "com.liferay.opensocial.model.OAuthToken",
    "OrgGroupRole" : "com.liferay.portal.model.OrgGroupRole",
    "OrgLabor" : "com.liferay.portal.model.OrgLabor",
    "Organization_" : "com.liferay.portal.model.Organization",
    "PM_UserThread" : "com.liferay.privatemessaging.model.UserThread",
    "PasswordPolicy" : "com.liferay.portal.model.PasswordPolicy",
    "PasswordPolicyRel" : "com.liferay.portal.model.PasswordPolicyRel",
    "PasswordTracker" : "com.liferay.portal.model.PasswordTracker",
    "Phone" : "com.liferay.portal.model.Phone",
    "PluginSetting" : "com.liferay.portal.model.PluginSetting",
    "PollsChoice" : "com.liferay.portlet.polls.model.PollsChoice",
    "PollsQuestion" : "com.liferay.portlet.polls.model.PollsQuestion",
    "PollsVote" : "com.liferay.portlet.polls.model.PollsVote",
    "PortalPreferences" : "com.liferay.portal.model.PortalPreferences",
    "Portlet" : "com.liferay.portal.model.Portlet",
    "PortletItem" : "com.liferay.portal.model.PortletItem",
    "PortletPreferences" : "com.liferay.portal.model.PortletPreferences",
    "PushNotificationsDevice" : "com.liferay.pushnotifications.model.PushNotificationsDevice",
    "RatingsEntry" : "com.liferay.portlet.ratings.model.RatingsEntry",
    "RatingsStats" : "com.liferay.portlet.ratings.model.RatingsStats",
    "Region" : "com.liferay.portal.model.Region",
    "Release_" : "com.liferay.portal.model.Release",
    "Repository" : "com.liferay.portal.model.Repository",
    "RepositoryEntry" : "com.liferay.portal.model.RepositoryEntry",
    "ResourceAction" : "com.liferay.portal.model.ResourceAction",
    "ResourceBlock" : "com.liferay.portal.model.ResourceBlock",
    "ResourceBlockPermission" : "com.liferay.portal.model.ResourceBlockPermission",
    "ResourcePermission" : "com.liferay.portal.model.ResourcePermission",
    "ResourceTypePermission" : "com.liferay.portal.model.ResourceTypePermission",
    "Role_" : "com.liferay.portal.model.Role",
    "SCFrameworkVersion" : "com.liferay.portlet.softwarecatalog.model.SCFrameworkVersion",
    "SCLicense" : "com.liferay.portlet.softwarecatalog.model.SCLicense",
    "SCProductEntry" : "com.liferay.portlet.softwarecatalog.model.SCProductEntry",
    "SCProductScreenshot" : "com.liferay.portlet.softwarecatalog.model.SCProductScreenshot",
    "SCProductVersion" : "com.liferay.portlet.softwarecatalog.model.SCProductVersion",
    "ServiceComponent" : "com.liferay.portal.model.ServiceComponent",
    "Shard" : "com.liferay.portal.model.Shard",
    "ShoppingCart" : "com.liferay.portlet.shopping.model.ShoppingCart",
    "ShoppingCategory" : "com.liferay.portlet.shopping.model.ShoppingCategory",
    "ShoppingCoupon" : "com.liferay.portlet.shopping.model.ShoppingCoupon",
    "ShoppingItem" : "com.liferay.portlet.shopping.model.ShoppingItem",
    "ShoppingItemField" : "com.liferay.portlet.shopping.model.ShoppingItemField",
    "ShoppingItemPrice" : "com.liferay.portlet.shopping.model.ShoppingItemPrice",
    "ShoppingOrder" : "com.liferay.portlet.shopping.model.ShoppingOrder",
    "ShoppingOrderItem" : "com.liferay.portlet.shopping.model.ShoppingOrderItem",
    "SocialActivity" : "com.liferay.portlet.social.model.SocialActivity",
    "SocialActivityAchievement" : "com.liferay.portlet.social.model.SocialActivityAchievement",
    "SocialActivityCounter" : "com.liferay.portlet.social.model.SocialActivityCounter",
    "SocialActivityLimit" : "com.liferay.portlet.social.model.SocialActivityLimit",
    "SocialActivitySet" : "com.liferay.portlet.social.model.SocialActivitySet",
    "SocialActivitySetting" : "com.liferay.portlet.social.model.SocialActivitySetting",
    "SocialRelation" : "com.liferay.portlet.social.model.SocialRelation",
    "SocialRequest" : "com.liferay.portlet.social.model.SocialRequest",
    "Subscription" : "com.liferay.portal.model.Subscription",
    "SyncDLFileVersionDiff" : "com.liferay.sync.model.SyncDLFileVersionDiff",
    "SyncDLObject" : "com.liferay.sync.model.SyncDLObject",
    "SyncDevice" : "com.liferay.sync.model.SyncDevice",
    "TMS_TasksEntry" : "com.liferay.tasks.model.TasksEntry",
    "Team" : "com.liferay.portal.model.Team",
    "Ticket" : "com.liferay.portal.model.Ticket",
    "TrashEntry" : "com.liferay.portlet.trash.model.TrashEntry",
    "TrashVersion" : "com.liferay.portlet.trash.model.TrashVersion",
    "UserGroup" : "com.liferay.portal.model.UserGroup",
    "UserGroupGroupRole" : "com.liferay.portal.model.UserGroupGroupRole",
    "UserGroupRole" : "com.liferay.portal.model.UserGroupRole",
    "UserIdMapper" : "com.liferay.portal.model.UserIdMapper",
    "UserNotificationDelivery" : "com.liferay.portal.model.UserNotificationDelivery",
    "UserNotificationEvent" : "com.liferay.portal.model.UserNotificationEvent",
    "UserTracker" : "com.liferay.portal.model.UserTracker",
    "UserTrackerPath" : "com.liferay.portal.model.UserTrackerPath",
    "User_" : "com.liferay.portal.model.User",
    "VirtualHost" : "com.liferay.portal.model.VirtualHost",
    "WebDAVProps" : "com.liferay.portal.model.WebDAVProps",
    "Website" : "com.liferay.portal.model.Website",
    "WikiNode" : "com.liferay.portlet.wiki.model.WikiNode",
    "WikiPage" : "com.liferay.portlet.wiki.model.WikiPage",
    "WikiPageResource" : "com.liferay.portlet.wiki.model.WikiPageResource",
    "WorkflowDefinitionLink" : "com.liferay.portal.model.WorkflowDefinitionLink",
    "WorkflowInstanceLink" : "com.liferay.portal.model.WorkflowInstanceLink",
#tables without className
    "AssetEntries_AssetCategories" : "",
    "AssetEntries_AssetTags" : "",
    "CT_Campaigns_UserSegments" : "",
    "DLFileEntryTypes_DDMStructures" : "",
    "DLFileEntryTypes_DLFolders" : "",
    "Groups_Orgs" : "",
    "Groups_Permissions" : "",
    "Groups_Roles" : "",
    "Groups_UserGroups" : "",
    "QUARTZ_BLOB_TRIGGERS" : "",
    "QUARTZ_CALENDARS" : "",
    "QUARTZ_CRON_TRIGGERS" : "",
    "QUARTZ_FIRED_TRIGGERS" : "",
    "QUARTZ_JOB_DETAILS" : "",
    "QUARTZ_LOCKS" : "",
    "QUARTZ_PAUSED_TRIGGER_GRPS" : "",
    "QUARTZ_SCHEDULER_STATE" : "",
    "QUARTZ_SIMPLE_TRIGGERS" : "",
    "QUARTZ_SIMPROP_TRIGGERS" : "",
    "QUARTZ_TRIGGERS" : "",
    "Roles_Permissions" : "",
    "SCFrameworkVersi_SCProductVers" : "",
    "SCLicenses_SCProductEntries" : "",
    "UserGroups_Teams" : "",
    "Users_Groups" : "",
    "Users_Orgs" : "",
    "Users_Permissions" : "",
    "Users_Roles" : "",
    "Users_Teams" : "",
    "Users_UserGroups" : ""
}
#
#tableRank is used to calculate fixAction:
# 1. table rank is not set => default value=0
# 2. (originRank < destinationRank) => "delete"
# 3a. (originRank == 0) && auxiliary table (ends in Link, Localization, Mapping, Rel, Version) => "delete"
# 3b. (originRank == 0) && its table className is "" => "delete"
# 3c. (originRank == 0) other cases => "???"
# 4. ((destinationRank == 0)||(originRank == destinationRank)) => "???"
# 5. (originRank > destinationRank) => "update" (except for PK columns!)
tableRank : {
    #Root tables
    "ClassName_" : 100,
    "Company" : 99,
    "Group_" : 90,
    "LayoutSet" : 80,
    #Main entities, don't delete
    "AssetVocabulary" : 50,
    "AssetCategory" : 40,
    "AssetTag" : 40,
    "BlogsEntry" : 50,
    "DLFileEntry" : 50,
    "DLFileVersion" : 50,
    "JournalArticle" : 50,
    "JournalArticleResource" : 50,
    "Layout" : 50,
    "MBThread" : 50,
    "WikiNode" : 60,
    "WikiPage" : 50,
    "WikiPageResource" : 50,
    #Expando tables
    "ExpandoTable" : -10,
    "ExpandoColumn" : -20,
    "ExpandoRow" : -20,
    "ExpandoValue" : -30,
    #Other entities
    "DDMTemplate" : -10,
    "DLFileEntryMetadata" : 20,
    "DLFileEntryType" : 20,
    "DLFileRank" : 10,
    "DLFileShortcut" : 40,
    "DLFolder" : 30,
    "Image" : -20,
    "JournalArticleImage" : 40,
    "JournalContentSearch" : 20,
    "JournalFeed" : 20,
    "JournalFolder" : 20,
    "MBMessage" : 20,
    #Auxiliary tables, safe to delete
    "AssetEntry" : -10,
    "AssetTagStats" : -10,
    "MBDiscussion" : -10,
    "RatingsEntry" : -10,
    "RatingsStats" : -10,
    "ResourceBlockPermission" : -50,
    "ResourcePermission" : -50,
    "SocialActivity" : -10,
    "Subscription" : -10
}