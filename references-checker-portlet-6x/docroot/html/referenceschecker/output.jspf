<%--
/**
 * Copyright (c) 2017-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

	<div id="page-wrap">
		<p>
			<em>Click on column headings to sort the table data</em>
		</p>
	</div>

	<div id="page-footer">
		<p>Generated in <%= renderRequest.getParameter("processTime") %> ms</p>
	</div>

	<script src="http://d3js.org/d3.v3.min.js" type="text/javascript">
	</script>

	<script type="text/javascript">
		function toogleHiddenSpan(id) {
			if (document.getElementById(id)) {
				if (document.getElementById(id+'-show').style.display != 'none') {
					document.getElementById(id+'-show').style.display = 'none';
					document.getElementById(id).style.display = 'block';
				}
				else {
					document.getElementById(id+'-show').style.display = 'inline';
					document.getElementById(id).style.display = 'none';
				}
			}
		}
	</script>

	<script type="text/javascript">
		var jsonData = <%= jsonData %>

		var titles = undefined;
		var sortAscending = true;

		if (jsonData != null && Array.isArray(jsonData)) {
			titles = d3.keys(jsonData[0]);
		}

		if (!Array.isArray(titles)) {
			document.getElementById("page-wrap").innerHTML="<b>Error parsing JSON data</b><br/><br/>";

			titles = undefined;
		}
		else if (titles.length < 2) {
			document.getElementById("page-wrap").innerHTML="<b>No results found:</b> your system is ok or perhaps you have to review the configuration file<br/><br/>";

			titles = undefined;
		}
		var table = d3.select('#page-wrap').append('table');
		var headers = table.append('thead').append('tr')
						.selectAll('th')
						.data(titles).enter()
						.append('th')
						.text(function (d) {
								return d;
						})
						.on('click', function (d) {
								headers.attr('class', 'header');

								if (sortAscending) {
									rows.sort(function(a, b) {
											var aa = parseFloat(a[d]);
											if (isNaN(aa)) {aa = "" + a[d]; aa = aa.toLowerCase();}
											var bb = parseFloat(b[d]);
											if (isNaN(bb)) {bb = "" + b[d]; bb = bb.toLowerCase();}
											return d3.ascending(aa,bb);
									});
									sortAscending = false;
									this.className = 'aes';
								}
								else {
									rows.sort(function(a, b) {
											var aa = parseFloat(a[d]);
											if (isNaN(aa)) {aa = "" + a[d]; aa = aa.toLowerCase();}
											var bb = parseFloat(b[d]);
											if (isNaN(bb)) {bb = "" + b[d]; bb = bb.toLowerCase();}
											return d3.descending(aa,bb);
									});
									sortAscending = true;
									this.className = 'des';
								}

						});

			var rows = table.append('tbody').selectAll('tr')
						.data(jsonData).enter()
						.append('tr');
			rows.selectAll('td')
			.data(function (d) {
				return titles.map(function (key) {
						var value = d[key];
						if (key.includes('attributes')) {
							value = value.replace(/,/g, ', ');
						}
						else if (key.includes('table')) {
							value = value.replace(/ value=/g, ' value = ');
							value = value.replace(/ name=/g, ' name = ');
						}
						return { 'value': value, 'name': key};
				});
			}).enter()
			.append('td')
			.attr('data-th', function (d) {
				return d.name;
			})
			.html(function (d) {
				if (d.name != 'missing references') {
					return d.value;
				}

				var maxLenght = 40;

				var outputString = "" + d.value;

				if (outputString.length < maxLenght) {
					return outputString;
				}

				var outputStringTrimmed = outputString.substring(0,maxLenght) + "...";

				outputString = outputString.replace(/,/g, ', ');

				var randomString = Math.random().toString(36).substr(2, 10);

				var tagId = randomString + "_" + Date.now();

				var onClick = "onclick=\"toogleHiddenSpan('" + tagId + "');return false;\"";
				var linkMore = "<a href='#' " + onClick + ">(see more)</a>";
				var linkCollapse = "<a href='#' " + onClick + ">(collapse)</a>";

				return "<span id='" + tagId + "-show' >" + outputStringTrimmed +
					" " + linkMore + "</span><span id='" + tagId + "' style='display: none;' >"
					+ outputString + " " + linkCollapse + "</span>";
			});
	</script>
